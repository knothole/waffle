// Top-level build file where you can add configuration options common to all sub-projects/modules.
import com.android.build.gradle.AppPlugin
import com.android.build.gradle.LibraryPlugin

buildscript {
    ext.kotlin_version = '1.3.50'
    repositories {
        google()
        jcenter()
        
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.5.3'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    repositories {
        google()
        jcenter()
        
    }

    plugins.whenPluginAdded {
        if (it instanceof AppPlugin || it instanceof LibraryPlugin) {
            project.with {
                configurations {
                    ktlint
                }

                dependencies {
                    ktlint "com.pinterest:ktlint:0.36.0"
                }

                task ktlint(type: JavaExec, group: "verification") {
                    def parameters = ["--reporter=checkstyle,output=${buildDir}/ktlint/checkstyle.xml", "src/**/*.kt"]
                    description = "Check Kotlin code style."
                    classpath = configurations.ktlint
                    main = "com.pinterest.ktlint.Main"
                    args parameters
                    // to generate report in checkstyle format prepend following args:
                    // "--reporter=plain", "--reporter=checkstyle,output=${buildDir}/ktlint.xml"
                    // see https://github.com/pinterest/ktlint#usage for more
                }
                check.dependsOn ktlint

                task ktlintFormat(type: JavaExec, group: "formatting") {
                    description = "Fix Kotlin code style deviations."
                    classpath = configurations.ktlint
                    main = "com.pinterest.ktlint.Main"
                    args "-F", "src/**/*.kt"
                }

            }
        }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}
